[{"C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\index.js":"1","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\App.js":"2","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\reportWebVitals.js":"3","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\pollService.js":"4","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\requests.js":"5","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\Blockchain\\web3Client.js":"6","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\head\\Head.js":"7","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\Content.js":"8","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\head\\Addpoll.js":"9","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\pollsdetails\\Pollsdetails.js":"10","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\pollslist\\Pollslist.js":"11","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\pollsdetails\\Results.js":"12","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\pollsdetails\\Vote.js":"13","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\pollslist\\Poll.js":"14"},{"size":535,"mtime":1668848178847,"results":"15","hashOfConfig":"16"},{"size":7848,"mtime":1669036867454,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1668848178972,"results":"18","hashOfConfig":"16"},{"size":795,"mtime":1669022757821,"results":"19","hashOfConfig":"16"},{"size":379,"mtime":1668969972579,"results":"20","hashOfConfig":"16"},{"size":1159,"mtime":1669050317429,"results":"21","hashOfConfig":"16"},{"size":1020,"mtime":1669028842715,"results":"22","hashOfConfig":"16"},{"size":1134,"mtime":1669032664421,"results":"23","hashOfConfig":"16"},{"size":2770,"mtime":1669035780037,"results":"24","hashOfConfig":"16"},{"size":1119,"mtime":1669030746538,"results":"25","hashOfConfig":"16"},{"size":786,"mtime":1669031423860,"results":"26","hashOfConfig":"16"},{"size":582,"mtime":1669031304601,"results":"27","hashOfConfig":"16"},{"size":1114,"mtime":1669031187119,"results":"28","hashOfConfig":"16"},{"size":1030,"mtime":1669033104712,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ugg9d8",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},"C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\index.js",[],[],"C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\App.js",["79","80","81","82"],[],"C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\reportWebVitals.js",[],[],"C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\pollService.js",["83","84","85"],[],"import Web3 from 'web3';\r\nimport { init , executeTransaction, call } from './Blockchain/web3Client';\r\n\r\n\r\n\r\nexport const creatPoll = (poll) => {\r\n\r\n    executeTransaction(\"creatPoll\", poll.question, poll.image || '', poll.options.map((opt) => Web3.utils.fromAscii(opt)));\r\n\r\n}\r\n\r\n\r\nexport const vote = (pollId, vote) => {\r\n    executeTransaction(\"vote\",pollId, vote);\r\n}\r\n\r\n\r\nexport const normalizeVoter = (voter) => {\r\n    return{id: voter[0], votedPolls: voter[1].map(vote => parseInt(vote))}\r\n}\r\n\r\nexport const normalizePoll = (poll, voter) => {\r\n\r\n    return{\r\n        id: parseInt(poll[0]),\r\n        question: poll[1],\r\n        image: poll[2],\r\n        results: poll[3].map(res => parseInt(res)),\r\n        options: poll[4].map(opt => Web3.utils.toAscii(opt).replace(/\\u0000/g,''))\r\n    }\r\n}","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\requests.js",["86"],[],"const requests = async (url = '', optionsObj = null, errMsg = null) => {\r\n\r\n    try{\r\n        const response = await fetch(url, optionsObj);\r\n        if(!response.ok) throw Error('Please reload the app !');\r\n    }catch(err){\r\n        errMsg = err.message;\r\n    }finally{\r\n        return errMsg;\r\n    }\r\n}\r\n\r\nconst getPolls = () => {\r\n\r\n    return\r\n}\r\n\r\n\r\nexport default requests;","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\Blockchain\\web3Client.js",[],[],"C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\head\\Head.js",["87"],[],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport Addpoll from './Addpoll'\r\n\r\nconst Head = ({newPoll, setNewPoll, handleSubmit}) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    return (\r\n        <header className='mb-5'>\r\n            <nav className='navbar bg-dark shadow-lg'>\r\n                <div className='container-fluid'>\r\n                    <a className='navbar-brand text-light' href=\"#\">\r\n                        Poll System\r\n                    </a>\r\n                    <button type=\"button\" className='btn btn-light' onClick={() => setShow(!show)}>Add Poll</button>\r\n                </div>\r\n            </nav>\r\n            <section className='jumpotron text-center p-5'>\r\n                <h1>Blockchain Polls</h1>\r\n            </section>\r\n            {show && \r\n            <Addpoll \r\n                newPoll={newPoll}\r\n                setNewPoll={setNewPoll}\r\n                handleSubmit={handleSubmit}    \r\n            /> }\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Head","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\Content.js",[],[],"C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\head\\Addpoll.js",[],[],"C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\pollsdetails\\Pollsdetails.js",["88"],[],"import React from 'react'\r\nimport Vote from './Vote'\r\nimport Results from './Results'\r\nimport { useState } from 'react'\r\n\r\n\r\nconst Pollsdetails = ({polls, setPolls, handleSelectPoll, pollSelected, handleVote, chartCon, setChartCon, voter, setVoter}) => {\r\n\r\n\r\n    return (\r\n    <div className='container h-100 ml-4'>\r\n      {pollSelected ? \r\n        (\r\n          \r\n          voter.votedPolls !== undefined && voter.votedPolls.length && voter.votedPolls.find(votedId => votedId === pollSelected.id) !== undefined ? \r\n          (\r\n            \r\n            <Results \r\n            polls = {polls}\r\n            setPolls = {setPolls}\r\n            pollSelected={pollSelected}\r\n            handleVote={handleVote}\r\n            chartCon={chartCon}\r\n            setChartCon={setChartCon}\r\n          />\r\n        \r\n          ):(\r\n            <Vote\r\n            polls = {polls}\r\n            setPolls = {setPolls}\r\n            pollSelected={pollSelected}\r\n            handleVote={handleVote}\r\n            \r\n          />\r\n          )\r\n        ):(\r\n          null\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pollsdetails","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\pollslist\\Pollslist.js",["89"],[],"import React from 'react'\r\nimport { NavItem } from 'react-bootstrap'\r\nimport Poll from './Poll'\r\n\r\n\r\nconst Pollslist = ({polls, setPolls, handleSelectPoll, pollSelected, setPollSelected, isLoading, voter, setVoter}) => {\r\n  return (\r\n      <div className='container mh-100 w-50 overflow-auto'>\r\n        {isLoading && <p>Is Loading ...</p>}\r\n\r\n        {!isLoading && polls.map((poll) => (\r\n          <Poll\r\n              poll={poll}\r\n              polls={polls}\r\n              key={poll.id}\r\n              handleSelectPoll={handleSelectPoll}\r\n              pollSelected={pollSelected}\r\n              setPollSelected={setPollSelected}\r\n              voter={voter}\r\n              setVoter={setVoter}\r\n\r\n          />\r\n\r\n        ))}\r\n     \r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Pollslist","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\pollsdetails\\Results.js",["90"],[],"import React from 'react'\r\nimport Chart from \"react-apexcharts\";\r\nimport { useState } from 'react';\r\n\r\nconst Results = ({polls, setPolls, pollSelected, handleVote, chartCon, setChartCon}) => {\r\n\r\n  console.log(pollSelected.id)\r\n    console.log(pollSelected.voted)\r\n  return (\r\n    <div id='poll-results'>\r\n        <h1 className='mb-1 ms-4'>{pollSelected.question}</h1>\r\n        <Chart\r\n              options={chartCon.options}\r\n              series={chartCon.series}\r\n              type=\"bar\"\r\n              height=\"90%\"\r\n            />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Results","C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\pollsdetails\\Vote.js",[],[],"C:\\Users\\wailb\\OneDrive\\Documents\\GitHub\\Blockchain-Polls\\src\\components\\content\\pollslist\\Poll.js",["91"],[],"import React from 'react'\r\n\r\nconst Poll = ({polls, poll, handleSelectPoll, voter, setVoter}) => {\r\n\r\n    \r\n  return (\r\n    \r\n    <div className='card h-auto mb-4' onClick={() => handleSelectPoll(polls[poll.id].id)}>\r\n        <div className='poll-img'>\r\n            <img className='img-fluid' src={poll.image} />\r\n        </div>\r\n        <div className='card-body'>\r\n            <p className='card-text text-truncate'>\r\n                {poll.question}\r\n            </p>\r\n            <div className='d-flex justify-content-between'>\r\n                <small className='text-muted'> Votes : {polls[poll.id] !== undefined && polls[poll.id].results.length && polls[poll.id].results.reduce((accumulator, value) => {return accumulator + value; }, 0)}</small>\r\n                {voter.votedPolls !== undefined && voter.votedPolls.length && voter.votedPolls.find(votedId => votedId === poll.id) !== undefined && <small className='badge bg-success'>Voted</small>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Poll",{"ruleId":"92","severity":1,"message":"93","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":16},{"ruleId":"92","severity":1,"message":"96","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":12},{"ruleId":"92","severity":1,"message":"97","line":8,"column":22,"nodeType":"94","messageId":"95","endLine":8,"endColumn":40},{"ruleId":"92","severity":1,"message":"98","line":9,"column":27,"nodeType":"94","messageId":"95","endLine":9,"endColumn":35},{"ruleId":"92","severity":1,"message":"99","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"100","line":2,"column":37,"nodeType":"94","messageId":"95","endLine":2,"endColumn":41},{"ruleId":"101","severity":1,"message":"102","line":29,"column":69,"nodeType":"103","messageId":"104","endLine":29,"endColumn":78},{"ruleId":"92","severity":1,"message":"105","line":13,"column":7,"nodeType":"94","messageId":"95","endLine":13,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":12,"column":21,"nodeType":"108","endLine":12,"endColumn":69},{"ruleId":"92","severity":1,"message":"109","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":18},{"ruleId":"92","severity":1,"message":"110","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":17},{"ruleId":"92","severity":1,"message":"109","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":10,"column":13,"nodeType":"108","endLine":10,"endColumn":59},"no-unused-vars","'requests' is defined but never used.","Identifier","unusedVar","'Web3' is defined but never used.","'executeTransaction' is defined but never used.","'getPolls' is defined but never used.","'init' is defined but never used.","'call' is defined but never used.","no-control-regex","Unexpected control character(s) in regular expression: \\x00.","Literal","unexpected","'getPolls' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'NavItem' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]