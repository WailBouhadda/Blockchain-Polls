{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wailb\\\\OneDrive\\\\Bureau\\\\blockchainpoll\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Head from './components/head/Head';\nimport Content from './components/content/Content';\nimport './css/bootstrap.min.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [polls, setPolls] = useState(JSON.parse(localStorage.getItem('pollsList')) ? JSON.parse(localStorage.getItem('pollsList')) : [{\n    id: 1,\n    question: 'Fill',\n    image: 'https://neilpatel.com/wp-content/uploads/fly-images/120099/AB-Testing4-1200x675-c.png',\n    results: [0, 0, 0],\n    options: ['Yes', 'No', 'Maybe'],\n    voted: true\n  }]);\n  if (!localStorage.getItem('pollsList')) {\n    localStorage.setItem('pollsList', JSON.stringify(polls));\n  }\n  const [newPoll, setNewPoll] = useState({\n    id: 0,\n    question: '',\n    image: '',\n    results: [0, 0, 0],\n    options: ['', '', '']\n  });\n  const addPoll = poll => {\n    const id = polls.length ? polls[polls.length - 1].id + 1 : 1;\n    const myNewPoll = {\n      id,\n      question: poll.question,\n      image: poll.image,\n      results: poll.results,\n      options: poll.options,\n      voted: false\n    };\n    const listPolls = [...polls, myNewPoll];\n    setPolls(listPolls);\n    localStorage.setItem('pollsList', JSON.stringify(listPolls));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!newPoll) return;\n    addPoll(newPoll);\n    setNewPoll(newPoll => ({\n      ...newPoll,\n      id: 0,\n      question: '',\n      image: '',\n      results: [0, 0, 0],\n      options: ['', '', ''],\n      voted: false\n    }));\n  };\n  const [voter, setVoter] = useState([{\n    id: \"12345\",\n    voted: false\n  }]);\n  const [pollSelected, setPollSelected] = useState();\n  const handleSelectPoll = id => {\n    const poll = polls.find(poll => poll.id === id);\n    const selected = {\n      id: poll.id,\n      question: poll.question,\n      image: poll.image,\n      results: poll.results,\n      options: poll.options,\n      voted: false\n    };\n    setPollSelected(selected);\n  };\n  const handleVote = e => {\n    e.preventDefault();\n    [].forEach.call(e.target.elements, function (ele) {\n      if (ele.checked) {\n        console.log(pollSelected.options[ele.value]);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      newPoll: newPoll,\n      setNewPoll: setNewPoll,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      polls: polls,\n      setPolls: setPolls,\n      handleSelectPoll: handleSelectPoll,\n      pollSelected: pollSelected,\n      handleVote: handleVote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XJfalnocgfcaavug2U16MWxsPew=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Head","Content","useState","App","polls","setPolls","JSON","parse","localStorage","getItem","id","question","image","results","options","voted","setItem","stringify","newPoll","setNewPoll","addPoll","poll","length","myNewPoll","listPolls","handleSubmit","e","preventDefault","voter","setVoter","pollSelected","setPollSelected","handleSelectPoll","find","selected","handleVote","forEach","call","target","elements","ele","checked","console","log","value"],"sources":["C:/Users/wailb/OneDrive/Bureau/blockchainpoll/src/App.js"],"sourcesContent":["import './App.css';\nimport Head from './components/head/Head';\nimport Content from './components/content/Content';\nimport './css/bootstrap.min.css'\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [polls, setPolls] = useState(\n                JSON.parse(localStorage.getItem('pollsList')) ?\n                (JSON.parse(localStorage.getItem('pollsList'))\n                ):(\n                    [{\n                      id: 1,\n                      question : 'Fill',\n                      image : 'https://neilpatel.com/wp-content/uploads/fly-images/120099/AB-Testing4-1200x675-c.png',\n                      results : [0,0,0],\n                      options : ['Yes','No','Maybe'],\n                      voted: true\n                    }]\n                )\n                );\n\nif(!localStorage.getItem('pollsList')){\n    localStorage.setItem('pollsList',JSON.stringify(polls));\n}\n\n  const [newPoll, setNewPoll] = useState({\n    id: 0,\n    question : '',\n    image : '',\n    results : [0,0,0],\n    options : ['','','']\n  });\n\n\n  const addPoll = (poll) => {\n\n    const id = polls.length ? polls[polls.length - 1].id + 1 : 1;\n    const myNewPoll = {id, question: poll.question, image: poll.image, results: poll.results, options: poll.options, voted: false};\n\n    const listPolls = [...polls, myNewPoll];\n    setPolls(listPolls);\n    localStorage.setItem('pollsList',JSON.stringify(listPolls));\n\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(!newPoll) return;\n    addPoll(newPoll);\n    setNewPoll(newPoll => ({\n                      ...newPoll,\n                      id: 0,\n                    question : '',\n                    image : '',\n                    results : [0,0,0],\n                    options : ['','',''],\n                    voted : false  \n                    }));\n  }\n\n\n\n  const [voter, setVoter] = useState([{\n    id : \"12345\",\n    voted : false\n  }]);\n\n\n  const [pollSelected, setPollSelected] = useState()\n\n  const handleSelectPoll = (id) => {\n\n    const poll = polls.find(poll => poll.id === id);\n    const selected = {id: poll.id, question: poll.question, image: poll.image, results: poll.results, options: poll.options, voted: false};\n    setPollSelected(selected);\n    \n  }\n\n\n  const handleVote = (e) => {\n\n    e.preventDefault();\n    [].forEach.call(e.target.elements, function(ele) {\n      if (ele.checked) {\n        console.log(pollSelected.options[ele.value]); \n      }\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <Head \n        newPoll={newPoll}\n        setNewPoll={setNewPoll}\n        handleSubmit={handleSubmit}\n      />\n      <Content \n        polls={polls}\n        setPolls={setPolls}\n        handleSelectPoll={handleSelectPoll}\n        pollSelected={pollSelected}\n        handleVote={handleVote}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}