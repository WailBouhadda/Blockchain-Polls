{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wailb\\\\OneDrive\\\\Bureau\\\\blockchainpoll\\\\src\\\\components\\\\head\\\\Head.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport Addpoll from './Addpoll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Head = () => {\n  _s();\n  const [newPoll, setNewPoll] = useState({\n    id: 0,\n    question: '',\n    image: '',\n    results: [0, 0, 0],\n    options: ['', '', '']\n  });\n  const addPoll = poll => {\n    const id = polls.length ? polls[polls.length - 1].id + 1 : 1;\n    const myNewPoll = {\n      id,\n      question: poll.question,\n      image: poll.image,\n      results: poll.results,\n      options: poll.options\n    };\n    const listPolls = [...polls, myNewPoll];\n    setPolls(listPolls);\n    localStorage.setItem('pollsList', JSON.stringify(listPolls));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!newPoll) return;\n    addPoll(newPoll);\n    setNewPoll(newPoll => ({\n      ...newPoll,\n      id: 0,\n      question: '',\n      image: '',\n      results: [0, 0, 0],\n      options: ['', '', '']\n    }));\n  };\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"navbar-brand text-light\",\n          href: \"#\",\n          children: \"Poll System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setShow(!show),\n          children: \"Add Poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumpotron text-center p-5\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Blockchain Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), show && /*#__PURE__*/_jsxDEV(Addpoll, {\n      newPoll: newPoll,\n      setNewPoll: setNewPoll,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Head, \"JlJSbF0GvXi2rK3lE1fmY3wqAR4=\");\n_c = Head;\nexport default Head;\nvar _c;\n$RefreshReg$(_c, \"Head\");","map":{"version":3,"names":["React","useState","Addpoll","Head","newPoll","setNewPoll","id","question","image","results","options","addPoll","poll","polls","length","myNewPoll","listPolls","setPolls","localStorage","setItem","JSON","stringify","handleSubmit","e","preventDefault","show","setShow"],"sources":["C:/Users/wailb/OneDrive/Bureau/blockchainpoll/src/components/head/Head.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport Addpoll from './Addpoll'\r\n\r\nconst Head = () => {\r\n\r\n\r\n    const [newPoll, setNewPoll] = useState({\r\n        id: 0,\r\n        question : '',\r\n        image : '',\r\n        results : [0,0,0],\r\n        options : ['','','']\r\n      });\r\n    \r\n    \r\n      const addPoll = (poll) => {\r\n    \r\n        const id = polls.length ? polls[polls.length - 1].id + 1 : 1;\r\n        const myNewPoll = {id, question: poll.question, image: poll.image, results: poll.results, options: poll.options};\r\n    \r\n        const listPolls = [...polls, myNewPoll];\r\n        setPolls(listPolls);\r\n        localStorage.setItem('pollsList',JSON.stringify(listPolls));\r\n    \r\n      }\r\n    \r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!newPoll) return;\r\n        addPoll(newPoll);\r\n        setNewPoll(newPoll => ({\r\n                          ...newPoll,\r\n                          id: 0,\r\n                        question : '',\r\n                        image : '',\r\n                        results : [0,0,0],\r\n                        options : ['','','']  \r\n                        }));\r\n      }\r\n\r\n    const [show, setShow] = useState(false);\r\n    return (\r\n        <header className='mb-5'>\r\n            <nav className='navbar bg-dark'>\r\n                <div className='container-fluid'>\r\n                    <a className='navbar-brand text-light' href=\"#\">\r\n                        Poll System\r\n                    </a>\r\n                    <button type=\"button\" className='btn btn-light' onClick={() => setShow(!show)}>Add Poll</button>\r\n                </div>\r\n            </nav>\r\n            <section className='jumpotron text-center p-5'>\r\n                <h1>Blockchain Polls</h1>\r\n            </section>\r\n            {show && \r\n            <Addpoll \r\n                newPoll={newPoll}\r\n                setNewPoll={setNewPoll}\r\n                handleSubmit={handleSubmit}    \r\n            /> }\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Head"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,WAAW;AAAA;AAE/B,MAAMC,IAAI,GAAG,MAAM;EAAA;EAGf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC;IACnCK,EAAE,EAAE,CAAC;IACLC,QAAQ,EAAG,EAAE;IACbC,KAAK,EAAG,EAAE;IACVC,OAAO,EAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IACjBC,OAAO,EAAG,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE;EACrB,CAAC,CAAC;EAGF,MAAMC,OAAO,GAAIC,IAAI,IAAK;IAExB,MAAMN,EAAE,GAAGO,KAAK,CAACC,MAAM,GAAGD,KAAK,CAACA,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC,CAACR,EAAE,GAAG,CAAC,GAAG,CAAC;IAC5D,MAAMS,SAAS,GAAG;MAACT,EAAE;MAAEC,QAAQ,EAAEK,IAAI,CAACL,QAAQ;MAAEC,KAAK,EAAEI,IAAI,CAACJ,KAAK;MAAEC,OAAO,EAAEG,IAAI,CAACH,OAAO;MAAEC,OAAO,EAAEE,IAAI,CAACF;IAAO,CAAC;IAEhH,MAAMM,SAAS,GAAG,CAAC,GAAGH,KAAK,EAAEE,SAAS,CAAC;IACvCE,QAAQ,CAACD,SAAS,CAAC;IACnBE,YAAY,CAACC,OAAO,CAAC,WAAW,EAACC,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC,CAAC;EAE7D,CAAC;EAED,MAAMM,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAG,CAACpB,OAAO,EAAE;IACbO,OAAO,CAACP,OAAO,CAAC;IAChBC,UAAU,CAACD,OAAO,KAAK;MACL,GAAGA,OAAO;MACVE,EAAE,EAAE,CAAC;MACPC,QAAQ,EAAG,EAAE;MACbC,KAAK,EAAG,EAAE;MACVC,OAAO,EAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;MACjBC,OAAO,EAAG,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE;IACnB,CAAC,CAAC,CAAC;EACrB,CAAC;EAEH,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACvC,oBACI;IAAQ,SAAS,EAAC,MAAM;IAAA,wBACpB;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAC3B;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC5B;UAAG,SAAS,EAAC,yBAAyB;UAAC,IAAI,EAAC,GAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAE3C,eACJ;UAAQ,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC,eAAe;UAAC,OAAO,EAAE,MAAMyB,OAAO,CAAC,CAACD,IAAI,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB;MAAA;QAAA;QAAA;QAAA;MAAA;IAC9F;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAS,SAAS,EAAC,2BAA2B;MAAA,uBAC1C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAyB;MAAA;MAAA;MAAA;IAAA,QACnB,EACTA,IAAI,iBACL,QAAC,OAAO;MACJ,OAAO,EAAErB,OAAQ;MACjB,UAAU,EAAEC,UAAW;MACvB,YAAY,EAAEiB;IAAa;MAAA;MAAA;MAAA;IAAA,QAC7B;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEjB,CAAC;AAAA,GA3DKnB,IAAI;AAAA,KAAJA,IAAI;AA6DV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}