{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wailb\\\\OneDrive\\\\Bureau\\\\blockchainpoll\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Head from './components/head/Head';\nimport Content from './components/content/Content';\nimport './css/bootstrap.min.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /** ###########   Chart state ############## */\n\n  const [chartCon, setChartCon] = useState({\n    series: [{\n      data: pollSelected.results\n    }],\n    options: {\n      chart: {\n        height: 350,\n        type: 'bar',\n        events: {\n          click: function (chart, w, e) {\n            // console.log(chart, w, e)\n          }\n        }\n      },\n      plotOptions: {\n        bar: {\n          columnWidth: '45%',\n          distributed: true\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      legend: {\n        show: false\n      },\n      xaxis: {\n        categories: pollSelected.options,\n        labels: {\n          style: {\n            fontSize: '12px'\n          }\n        }\n      }\n    }\n  });\n\n  /** ###########   Chart state ############## */\n\n  const [polls, setPolls] = useState(JSON.parse(localStorage.getItem('pollsList')) ? JSON.parse(localStorage.getItem('pollsList')) : [{\n    id: 1,\n    question: 'Fill',\n    image: 'https://neilpatel.com/wp-content/uploads/fly-images/120099/AB-Testing4-1200x675-c.png',\n    results: [0, 0, 0],\n    options: ['Yes', 'No', 'Maybe'],\n    voted: true\n  }]);\n  if (!localStorage.getItem('pollsList')) {\n    localStorage.setItem('pollsList', JSON.stringify(polls));\n  }\n  const [newPoll, setNewPoll] = useState({\n    id: 0,\n    question: '',\n    image: '',\n    results: [0, 0, 0],\n    options: ['', '', '']\n  });\n  const addPoll = poll => {\n    const id = polls.length ? polls[polls.length - 1].id + 1 : 1;\n    const myNewPoll = {\n      id,\n      question: poll.question,\n      image: poll.image,\n      results: poll.results,\n      options: poll.options,\n      voted: false\n    };\n    const listPolls = [...polls, myNewPoll];\n    setPolls(listPolls);\n    localStorage.setItem('pollsList', JSON.stringify(listPolls));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!newPoll) return;\n    addPoll(newPoll);\n    setNewPoll(newPoll => ({\n      ...newPoll,\n      id: 0,\n      question: '',\n      image: '',\n      results: [0, 0, 0],\n      options: ['', '', ''],\n      voted: false\n    }));\n  };\n  const [voter, setVoter] = useState([{\n    id: \"12345\",\n    voted: false\n  }]);\n  const [pollSelected, setPollSelected] = useState();\n  const handleSelectPoll = id => {\n    const poll = polls.find(poll => poll.id === id);\n    const selected = {\n      id: poll.id,\n      question: poll.question,\n      image: poll.image,\n      results: poll.results,\n      options: poll.options,\n      voted: poll.voted\n    };\n    setPollSelected(selected);\n  };\n  const handleVote = e => {\n    e.preventDefault();\n    [].forEach.call(e.target.elements, function (ele) {\n      if (ele.checked) {\n        const index = polls.findIndex(poll => {\n          return poll.id === pollSelected.id;\n        });\n        polls[index].results[ele.value] += 1;\n        polls[index].voted = true;\n        setPolls(polls);\n        localStorage.setItem('pollsList', JSON.stringify(polls));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      newPoll: newPoll,\n      setNewPoll: setNewPoll,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      polls: polls,\n      setPolls: setPolls,\n      handleSelectPoll: handleSelectPoll,\n      pollSelected: pollSelected,\n      handleVote: handleVote,\n      chartCon: chartCon,\n      setChartCon: setChartCon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vmyEEhyqziCI+bLr2JRU3FafZmo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Head","Content","useState","App","chartCon","setChartCon","series","data","pollSelected","results","options","chart","height","type","events","click","w","e","plotOptions","bar","columnWidth","distributed","dataLabels","enabled","legend","show","xaxis","categories","labels","style","fontSize","polls","setPolls","JSON","parse","localStorage","getItem","id","question","image","voted","setItem","stringify","newPoll","setNewPoll","addPoll","poll","length","myNewPoll","listPolls","handleSubmit","preventDefault","voter","setVoter","setPollSelected","handleSelectPoll","find","selected","handleVote","forEach","call","target","elements","ele","checked","index","findIndex","value"],"sources":["C:/Users/wailb/OneDrive/Bureau/blockchainpoll/src/App.js"],"sourcesContent":["import './App.css';\nimport Head from './components/head/Head';\nimport Content from './components/content/Content';\nimport './css/bootstrap.min.css'\nimport { useState } from 'react';\n\nfunction App() {\n\n\n  /** ###########   Chart state ############## */\n\n  const [chartCon, setChartCon] = useState(\n    {\n      series: [{\n          data: pollSelected.results\n        }],\n        options: {\n          chart: {\n            height: 350,\n            type: 'bar',\n            events: {\n              click: function(chart, w, e) {\n                // console.log(chart, w, e)\n              }\n            }\n          },\n          plotOptions: {\n            bar: {\n              columnWidth: '45%',\n              distributed: true,\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          legend: {\n            show: false\n          },\n          xaxis: {\n            categories: pollSelected.options,\n            labels: {\n              style: {\n                fontSize: '12px'\n              }\n            }\n          }\n        },\n  }\n\n  )\n\n    /** ###########   Chart state ############## */\n\n\n  const [polls, setPolls] = useState(\n                JSON.parse(localStorage.getItem('pollsList')) ?\n                (JSON.parse(localStorage.getItem('pollsList'))\n                ):(\n                    [{\n                      id: 1,\n                      question : 'Fill',\n                      image : 'https://neilpatel.com/wp-content/uploads/fly-images/120099/AB-Testing4-1200x675-c.png',\n                      results : [0,0,0],\n                      options : ['Yes','No','Maybe'],\n                      voted: true\n                    }]\n                )\n                );\n\nif(!localStorage.getItem('pollsList')){\n    localStorage.setItem('pollsList',JSON.stringify(polls));\n}\n\n  const [newPoll, setNewPoll] = useState({\n    id: 0,\n    question : '',\n    image : '',\n    results : [0,0,0],\n    options : ['','','']\n  });\n\n\n  const addPoll = (poll) => {\n\n    const id = polls.length ? polls[polls.length - 1].id + 1 : 1;\n    const myNewPoll = {id, question: poll.question, image: poll.image, results: poll.results, options: poll.options, voted: false};\n\n    const listPolls = [...polls, myNewPoll];\n    setPolls(listPolls);\n    localStorage.setItem('pollsList',JSON.stringify(listPolls));\n\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(!newPoll) return;\n    addPoll(newPoll);\n    setNewPoll(newPoll => ({\n                      ...newPoll,\n                      id: 0,\n                    question : '',\n                    image : '',\n                    results : [0,0,0],\n                    options : ['','',''],\n                    voted : false  \n                    }));\n  }\n\n\n\n  const [voter, setVoter] = useState([{\n    id : \"12345\",\n    voted : false\n  }]);\n\n\n  const [pollSelected, setPollSelected] = useState()\n\n  const handleSelectPoll = (id) => {\n\n    const poll = polls.find(poll => poll.id === id);\n    const selected = {id: poll.id, question: poll.question, image: poll.image, results: poll.results, options: poll.options, voted: poll.voted};\n\n    \n\n    setPollSelected(selected);\n    \n  }\n\n\n  const handleVote = (e) => {\n\n    e.preventDefault();\n    [].forEach.call(e.target.elements, function(ele) {\n        if (ele.checked) {\n          const index = polls.findIndex(poll => {\n            return poll.id === pollSelected.id;\n          });\n          polls[index].results[ele.value] += 1;\n          polls[index].voted = true;\n          setPolls(polls);\n          localStorage.setItem('pollsList',JSON.stringify(polls));\n        }\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <Head \n        newPoll={newPoll}\n        setNewPoll={setNewPoll}\n        handleSubmit={handleSubmit}\n      />\n      <Content \n        polls={polls}\n        setPolls={setPolls}\n        handleSelectPoll={handleSelectPoll}\n        pollSelected={pollSelected}\n        handleVote={handleVote}\n        chartCon={chartCon}\n        setChartCon={setChartCon}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}